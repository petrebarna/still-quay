{"ast":null,"code":"var _jsxFileName = \"/home/pe/Documents/Code/Projects/still-quay/frontend/src/components/QuayStatus.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.status = () => {\n      if (this.state.safeToday) {\n        return \"SAFE\";\n      } else {\n        return \"IN DANGER!\";\n      }\n    };\n\n    this.state = {\n      quayname: '',\n      stationId: '',\n      safeToday: true,\n      tides: [],\n      stationCoordinates: '',\n      stationName: ''\n    };\n  }\n\n  componentDidMount() {\n    const heights = [];\n    axios.get('http://localhost:5000/quays/' + this.props.match.params.id).then(response => {\n      this.setState({\n        stationId: response.data.stationId,\n        quayname: response.data.quayname\n      });\n      axios.get('http://localhost:5000/tides/' + this.state.stationId).then(response => {\n        response.data.map(tide => heights.push(Math.round(tide.Height * 100) / 100));\n        this.setState({\n          tides: heights\n        });\n      }).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.quayname), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Tides \", this.state.tides.join()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"The \", this.state.quayname, \" quay is currently \", this.status()));\n  }\n\n}\n\nexport default QuayStatus;","map":{"version":3,"sources":["/home/pe/Documents/Code/Projects/still-quay/frontend/src/components/QuayStatus.js"],"names":["React","Component","axios","QuayStatus","constructor","props","status","state","safeToday","quayname","stationId","tides","stationCoordinates","stationName","componentDidMount","heights","get","match","params","id","then","response","setState","data","map","tide","push","Math","round","Height","catch","err","console","log","render","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkCnBC,MAlCmB,GAkCV,MAAM;AACb,UAAG,KAAKC,KAAL,CAAWC,SAAd,EAAyB;AACvB,eAAO,MAAP;AACD,OAFD,MAEO;AACL,eAAO,YAAP;AACD;AACF,KAxCkB;;AAGjB,SAAKD,KAAL,GAAa;AACXE,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXF,MAAAA,SAAS,EAAE,IAHA;AAIXG,MAAAA,KAAK,EAAC,EAJK;AAKXC,MAAAA,kBAAkB,EAAE,EALT;AAMXC,MAAAA,WAAW,EAAC;AAND,KAAb;AAQD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,OAAO,GAAG,EAAhB;AACAb,IAAAA,KAAK,CAACc,GAAN,CAAU,iCAAiC,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnE,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZZ,QAAAA,SAAS,EAAEW,QAAQ,CAACE,IAAT,CAAcb,SADb;AAEZD,QAAAA,QAAQ,EAAEY,QAAQ,CAACE,IAAT,CAAcd;AAFZ,OAAd;AAIAP,MAAAA,KAAK,CAACc,GAAN,CAAU,iCAAiC,KAAKT,KAAL,CAAWG,SAAtD,EACGU,IADH,CACQC,QAAQ,IAAI;AAChBA,QAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,IAAI,IACpBV,OAAO,CAACW,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAYH,IAAI,CAACI,MAAL,GAAc,GAA1B,IAAkC,GAA/C,CADF;AAGF,aAAKP,QAAL,CAAc;AAACX,UAAAA,KAAK,EAAEI;AAAR,SAAd;AAAgC,OALlC,EAMCe,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANd;AAMgC,KAZlC,EAcCD,KAdD,CAcOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAdd;AAeD;;AAgBDG,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK3B,KAAL,CAAWE,QAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACS,KAAKF,KAAL,CAAWI,KAAX,CAAiBwB,IAAjB,EADT,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACO,KAAK5B,KAAL,CAAWE,QADlB,yBAC+C,KAAKH,MAAL,EAD/C,CALF,CADF;AAYD;;AA7DgC;;AAgEnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport axios from 'axios';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quayname: '',\n      stationId: '',\n      safeToday: true,\n      tides:[],\n      stationCoordinates: '',\n      stationName:'',\n    }\n  }\n\n  componentDidMount() {\n    const heights = [];\n    axios.get('http://localhost:5000/quays/' + this.props.match.params.id)\n    .then(response => {\n      this.setState({\n        stationId: response.data.stationId,\n        quayname: response.data.quayname,\n      });\n      axios.get('http://localhost:5000/tides/' + this.state.stationId)\n        .then(response => {\n          response.data.map(tide => \n            heights.push(Math.round((tide.Height * 100)) / 100)\n          )\n        this.setState({tides: heights})})\n      .catch(err => console.log(err))}\n      )\n    .catch(err => console.log(err))\n  }\n  \n  \n\n  status = () => {\n    if(this.state.safeToday) {\n      return \"SAFE\"\n    } else {\n      return \"IN DANGER!\"\n    }\n  }\n\n\n\n\n\n  render() {\n\n    return(\n      <div>\n        <h3>{this.state.quayname}</h3>\n        <p>\n          Tides {this.state.tides.join()}\n        </p>\n        <p>\n          The {this.state.quayname} quay is currently {this.status()}\n        </p>\n      </div>\n\n    );\n  }\n}\n\nexport default QuayStatus;"]},"metadata":{},"sourceType":"module"}
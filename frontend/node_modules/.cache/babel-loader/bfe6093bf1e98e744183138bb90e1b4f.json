{"ast":null,"code":"var _jsxFileName = \"/home/pe/Documents/Code/Projects/still-quay/frontend/src/components/QuayStatus.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.status = () => {\n      if (this.state.safeToday) {\n        return \"SAFE\";\n      } else {\n        return \"IN DANGER!\";\n      }\n    };\n\n    this.tides = () => {\n      const heights = [];\n      this.state.tides.map(tide => heights.push(Math.round(tide.Height * 100) / 100));\n      return heights;\n    };\n\n    this.state = {\n      quayname: '',\n      location: '',\n      stationId: '',\n      safeToday: true,\n      tides: [],\n      stationCoordinates: '',\n      stationName: '',\n      stationCountry: ''\n    };\n  } // the tides are requested from here, but are pulled from admiralty from the BE and returned here.\n\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/quays/' + this.props.match.params.id).then(response => {\n      this.setState({\n        stationId: response.data.stationId\n      });\n      axios.get('http://localhost:5000/tides/' + this.state.stationId).then(response => {\n        this.setState({\n          tides: response.data\n        });\n      }).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Low \", this.tides()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"The \", this.state.quayname, \" quay is currently \", this.status()));\n  }\n\n}\n\nexport default QuayStatus;","map":{"version":3,"sources":["/home/pe/Documents/Code/Projects/still-quay/frontend/src/components/QuayStatus.js"],"names":["React","Component","axios","QuayStatus","constructor","props","status","state","safeToday","tides","heights","map","tide","push","Math","round","Height","quayname","location","stationId","stationCoordinates","stationName","stationCountry","componentDidMount","get","match","params","id","then","response","setState","data","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8BnBC,MA9BmB,GA8BV,MAAM;AACb,UAAG,KAAKC,KAAL,CAAWC,SAAd,EAAyB;AACvB,eAAO,MAAP;AACD,OAFD,MAEO;AACL,eAAO,YAAP;AACD;AACF,KApCkB;;AAAA,SAsCnBC,KAtCmB,GAsCX,MAAM;AACZ,YAAMC,OAAO,GAAG,EAAhB;AACA,WAAKH,KAAL,CAAWE,KAAX,CAAiBE,GAAjB,CAAqBC,IAAI,IACvBF,OAAO,CAACG,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAYH,IAAI,CAACI,MAAL,GAAc,GAA1B,IAAkC,GAA/C,CADF;AAGA,aAAON,OAAP;AACD,KA5CkB;;AAGjB,SAAKH,KAAL,GAAa;AACXU,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXX,MAAAA,SAAS,EAAE,IAJA;AAKXC,MAAAA,KAAK,EAAC,EALK;AAMXW,MAAAA,kBAAkB,EAAE,EANT;AAOXC,MAAAA,WAAW,EAAC,EAPD;AAQXC,MAAAA,cAAc,EAAE;AARL,KAAb;AAUD,GAdgC,CAgBjC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBrB,IAAAA,KAAK,CAACsB,GAAN,CAAU,iCAAiC,KAAKnB,KAAL,CAAWoB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnE,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AAACX,QAAAA,SAAS,EAAEU,QAAQ,CAACE,IAAT,CAAcZ;AAA1B,OAAd;AACAjB,MAAAA,KAAK,CAACsB,GAAN,CAAU,iCAAiC,KAAKjB,KAAL,CAAWY,SAAtD,EACGS,IADH,CACQC,QAAQ,IAAI;AAClB,aAAKC,QAAL,CAAc;AAACrB,UAAAA,KAAK,EAAEoB,QAAQ,CAACE;AAAjB,SAAd;AAAsC,OAFxC,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHd;AAGgC,KANlC,EAQCD,KARD,CAQOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARd;AASD;;AAoBDG,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACO,KAAK3B,KAAL,EADP,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACO,KAAKF,KAAL,CAAWU,QADlB,yBAC+C,KAAKX,MAAL,EAD/C,CAJF,CADF;AAWD;;AA5DgC;;AA+DnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport axios from 'axios';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quayname: '',\n      location: '',\n      stationId: '',\n      safeToday: true,\n      tides:[],\n      stationCoordinates: '',\n      stationName:'',\n      stationCountry: ''\n    }\n  }\n\n  // the tides are requested from here, but are pulled from admiralty from the BE and returned here.\n  componentDidMount() {\n    axios.get('http://localhost:5000/quays/' + this.props.match.params.id)\n    .then(response => {\n      this.setState({stationId: response.data.stationId});\n      axios.get('http://localhost:5000/tides/' + this.state.stationId)\n        .then(response => {\n        this.setState({tides: response.data})})\n      .catch(err => console.log(err))}\n      )\n    .catch(err => console.log(err))\n  }\n  \n  \n\n  status = () => {\n    if(this.state.safeToday) {\n      return \"SAFE\"\n    } else {\n      return \"IN DANGER!\"\n    }\n  }\n\n  tides = () => {\n    const heights = [];\n    this.state.tides.map(tide => \n      heights.push(Math.round((tide.Height * 100)) / 100)\n    )\n    return heights;\n  }\n\n  render() {\n\n    return(\n      <div>\n        <p>\n          Low {this.tides()}\n        </p>\n        <p>\n          The {this.state.quayname} quay is currently {this.status()}\n        </p>\n      </div>\n\n    );\n  }\n}\n\nexport default QuayStatus;"]},"metadata":{},"sourceType":"module"}
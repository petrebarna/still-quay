{"ast":null,"code":"var _jsxFileName = \"/home/pe/Documents/Code/Projects/still-quay/src/components/QuayStatus.js\";\nimport React, { Component } from 'react';\nimport Aux from '../hoc/Aux';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.assessWeather = (days, weatherData) => {// receives an array of days and the data for these days \n    };\n\n    this.assessTides = (days, tidalData) => {};\n\n    this.dangerToggler = () => {\n      if (this.assessWeather || this.assessTides) {\n        this.setState({\n          danger: true\n        });\n      } else {\n        this.setState({\n          danger: false\n        });\n      }\n    };\n\n    this.assessWeather = this.assessWeather.bind(this);\n    this.state = {\n      danger: false\n    };\n  }\n\n  render() {\n    let quayStatus;\n\n    if (this.state.danger) {\n      quayStatus = \"in danger\";\n    } else {\n      quayStatus = \"safe\";\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"The quay wall is currently \", quayStatus, \".\"));\n  }\n\n}\n\nexport default QuayStatus;","map":{"version":3,"sources":["/home/pe/Documents/Code/Projects/still-quay/src/components/QuayStatus.js"],"names":["React","Component","Aux","QuayStatus","constructor","props","assessWeather","days","weatherData","assessTides","tidalData","dangerToggler","setState","danger","bind","state","render","quayStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,aAXmB,GAWH,CAACC,IAAD,EAAOC,WAAP,KAAuB,CACrC;AACD,KAbkB;;AAAA,SAenBC,WAfmB,GAeL,CAACF,IAAD,EAAOG,SAAP,KAAqB,CAElC,CAjBkB;;AAAA,SAmBnBC,aAnBmB,GAmBH,MAAM;AACpB,UAAG,KAAKL,aAAL,IAAsB,KAAKG,WAA9B,EAA2C;AACzC,aAAKG,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAd;AACD,OAFD,MAEO;AACL,aAAKD,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAd;AACD;AACF,KAzBkB;;AAGjB,SAAKP,aAAL,GAAqB,KAAKA,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAArB;AAGA,SAAKC,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAkBDG,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAJ;;AACA,QAAG,KAAKF,KAAL,CAAWF,MAAd,EAAsB;AACpBI,MAAAA,UAAU,GAAG,WAAb;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,GAAG,MAAb;AACD;;AAED,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAC8BA,UAD9B,MADF,CADF;AAOD;;AA3CgC;;AA+CnC,eAAed,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../hoc/Aux';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.assessWeather = this.assessWeather.bind(this);\n\n\n    this.state = {\n      danger: false,\n    }\n  }\n\n  assessWeather = (days, weatherData) => {\n    // receives an array of days and the data for these days \n  }\n\n  assessTides = (days, tidalData) => {\n\n  }\n  \n  dangerToggler = () => {\n    if(this.assessWeather || this.assessTides) {\n      this.setState({danger: true});\n    } else {\n      this.setState({danger: false});\n    }\n  }\n  \n  render() {\n    let quayStatus;\n    if(this.state.danger) {\n      quayStatus = \"in danger\";\n    } else {\n      quayStatus = \"safe\"\n    }\n\n    return(\n      <Aux>\n        <h1>\n          The quay wall is currently {quayStatus}.\n        </h1>\n      </Aux>\n    );\n  }\n  \n}\n\nexport default QuayStatus;"]},"metadata":{},"sourceType":"module"}
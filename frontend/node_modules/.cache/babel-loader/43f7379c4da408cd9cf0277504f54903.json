{"ast":null,"code":"var _jsxFileName = \"/home/pe/Documents/Code/Projects/still-quay/frontend/src/components/QuayStatus.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.status = () => {\n      if (this.state.safeToday) {\n        return \"SAFE\";\n      } else {\n        return \"IN DANGER!\";\n      }\n    };\n\n    this.tides = () => {\n      const levels = [];\n      this.state.tides.map(tide => {});\n    };\n\n    this.state = {\n      quayname: '',\n      location: '',\n      stationId: '',\n      safeToday: true,\n      tides: [],\n      stationCoordinates: '',\n      stationName: '',\n      stationCountry: ''\n    };\n  } // the tides are requested from here, but are pulled from admiralty from the BE and returned here.\n\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/quays/' + this.props.match.params.id).then(response => {\n      this.setState({\n        stationId: response.data.stationId\n      });\n      axios.get('http://localhost:5000/tides/' + this.state.stationId).then(response => {\n        this.setState({\n          tides: response.data\n        });\n      }).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"These are the tides \", this.tides), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"The \", this.state.quayname, \" quay is currently \", this.status()));\n  }\n\n}\n\nexport default QuayStatus;","map":{"version":3,"sources":["/home/pe/Documents/Code/Projects/still-quay/frontend/src/components/QuayStatus.js"],"names":["React","Component","axios","QuayStatus","constructor","props","status","state","safeToday","tides","levels","map","tide","quayname","location","stationId","stationCoordinates","stationName","stationCountry","componentDidMount","get","match","params","id","then","response","setState","data","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8BnBC,MA9BmB,GA8BV,MAAM;AACb,UAAG,KAAKC,KAAL,CAAWC,SAAd,EAAyB;AACvB,eAAO,MAAP;AACD,OAFD,MAEO;AACL,eAAO,YAAP;AACD;AACF,KApCkB;;AAAA,SAsCnBC,KAtCmB,GAsCX,MAAM;AACZ,YAAMC,MAAM,GAAG,EAAf;AACA,WAAKH,KAAL,CAAWE,KAAX,CAAiBE,GAAjB,CAAqBC,IAAI,IAAI,CAE5B,CAFD;AAGD,KA3CkB;;AAGjB,SAAKL,KAAL,GAAa;AACXM,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXP,MAAAA,SAAS,EAAE,IAJA;AAKXC,MAAAA,KAAK,EAAC,EALK;AAMXO,MAAAA,kBAAkB,EAAE,EANT;AAOXC,MAAAA,WAAW,EAAC,EAPD;AAQXC,MAAAA,cAAc,EAAE;AARL,KAAb;AAUD,GAdgC,CAgBjC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,KAAK,CAACkB,GAAN,CAAU,iCAAiC,KAAKf,KAAL,CAAWgB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnE,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AAACX,QAAAA,SAAS,EAAEU,QAAQ,CAACE,IAAT,CAAcZ;AAA1B,OAAd;AACAb,MAAAA,KAAK,CAACkB,GAAN,CAAU,iCAAiC,KAAKb,KAAL,CAAWQ,SAAtD,EACGS,IADH,CACQC,QAAQ,IAAI;AAClB,aAAKC,QAAL,CAAc;AAACjB,UAAAA,KAAK,EAAEgB,QAAQ,CAACE;AAAjB,SAAd;AAAsC,OAFxC,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHd;AAGgC,KANlC,EAQCD,KARD,CAQOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARd;AASD;;AAmBDG,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACuB,KAAKvB,KAD5B,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACO,KAAKF,KAAL,CAAWM,QADlB,yBAC+C,KAAKP,MAAL,EAD/C,CAJF,CADF;AAWD;;AA3DgC;;AA8DnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport axios from 'axios';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quayname: '',\n      location: '',\n      stationId: '',\n      safeToday: true,\n      tides:[],\n      stationCoordinates: '',\n      stationName:'',\n      stationCountry: ''\n    }\n  }\n\n  // the tides are requested from here, but are pulled from admiralty from the BE and returned here.\n  componentDidMount() {\n    axios.get('http://localhost:5000/quays/' + this.props.match.params.id)\n    .then(response => {\n      this.setState({stationId: response.data.stationId});\n      axios.get('http://localhost:5000/tides/' + this.state.stationId)\n        .then(response => {\n        this.setState({tides: response.data})})\n      .catch(err => console.log(err))}\n      )\n    .catch(err => console.log(err))\n  }\n  \n  \n\n  status = () => {\n    if(this.state.safeToday) {\n      return \"SAFE\"\n    } else {\n      return \"IN DANGER!\"\n    }\n  }\n\n  tides = () => {\n    const levels = [];\n    this.state.tides.map(tide => {\n      \n    })\n  }\n\n  render() {\n\n    return(\n      <div>\n        <p>\n          These are the tides {this.tides}\n        </p>\n        <p>\n          The {this.state.quayname} quay is currently {this.status()}\n        </p>\n      </div>\n\n    );\n  }\n}\n\nexport default QuayStatus;"]},"metadata":{},"sourceType":"module"}
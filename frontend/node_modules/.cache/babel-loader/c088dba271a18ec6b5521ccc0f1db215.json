{"ast":null,"code":"var _jsxFileName = \"/home/pe/Documents/Code/Projects/still-quay/frontend/src/components/QuayStatus.js\";\nimport React, { Component } from 'react';\nimport Aux from '../hoc/Aux';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dangerousWeathertoggler = (days, weatherData) => {// receives an array of days and the data for these days\n      // toggles state.dangerousWeather to true if at least one\n      // day fails the criteria\n    };\n\n    this.dangerousTidesToggler = (days, tidalData) => {// receives an array of days and the data for these days\n      // toggles state.dangerousTides to true if at least one\n      // day fails the criteria\n    };\n\n    this.dangerToggler = () => {\n      if (this.state.dangerousTides || this.state.dangerousWeather) {\n        this.setState({\n          danger: true\n        });\n      } else {\n        this.setState({\n          danger: false\n        });\n      }\n    };\n\n    this.dangerousWeathertoggler = this.dangerousWeathertoggler.bind(this);\n    this.dangerousTidesToggler = this.dangerousTidesToggler.bind(this);\n    this.dangerToggler = this.dangerToggler.bind(this);\n    this.state = {\n      danger: false,\n      dangerousTides: false,\n      dangerousWeather: false,\n      assessForDays: []\n    };\n  }\n\n  render() {\n    let quayStatus;\n\n    if (this.state.danger) {\n      quayStatus = \"in danger\";\n    } else {\n      quayStatus = \"safe\";\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"The quay wall is currently \", quayStatus, \".\"));\n  }\n\n}\n\nexport default QuayStatus;","map":{"version":3,"sources":["/home/pe/Documents/Code/Projects/still-quay/frontend/src/components/QuayStatus.js"],"names":["React","Component","Aux","QuayStatus","constructor","props","dangerousWeathertoggler","days","weatherData","dangerousTidesToggler","tidalData","dangerToggler","state","dangerousTides","dangerousWeather","setState","danger","bind","assessForDays","render","quayStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,uBAlBmB,GAkBO,CAACC,IAAD,EAAOC,WAAP,KAAuB,CAC/C;AACA;AACA;AACD,KAtBkB;;AAAA,SAwBnBC,qBAxBmB,GAwBK,CAACF,IAAD,EAAOG,SAAP,KAAqB,CAC3C;AACA;AACA;AACD,KA5BkB;;AAAA,SA8BnBC,aA9BmB,GA8BH,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,cAAX,IAA6B,KAAKD,KAAL,CAAWE,gBAA3C,EAA6D;AAC3D,aAAKC,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAd;AACD,OAFD,MAEO;AACL,aAAKD,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAd;AACD;AACF,KApCkB;;AAGjB,SAAKV,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BW,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKR,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BQ,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKN,aAAL,GAAqB,KAAKA,aAAL,CAAmBM,IAAnB,CAAwB,IAAxB,CAArB;AAGA,SAAKL,KAAL,GAAa;AACXI,MAAAA,MAAM,EAAE,KADG;AAEXH,MAAAA,cAAc,EAAE,KAFL;AAGXC,MAAAA,gBAAgB,EAAE,KAHP;AAIXI,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAQD;;AAsBDC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAJ;;AACA,QAAG,KAAKR,KAAL,CAAWI,MAAd,EAAsB;AACpBI,MAAAA,UAAU,GAAG,WAAb;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,GAAG,MAAb;AACD;;AAED,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAC8BA,UAD9B,MADF,CADF;AAQD;;AAvDgC;;AA0DnC,eAAejB,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../hoc/Aux';\n\nclass QuayStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dangerousWeathertoggler = this.dangerousWeathertoggler.bind(this);\n    this.dangerousTidesToggler = this.dangerousTidesToggler.bind(this);\n    this.dangerToggler = this.dangerToggler.bind(this);\n\n\n    this.state = {\n      danger: false,\n      dangerousTides: false,\n      dangerousWeather: false,\n      assessForDays: [],\n      \n\n    }\n  }\n\n  dangerousWeathertoggler = (days, weatherData) => {\n    // receives an array of days and the data for these days\n    // toggles state.dangerousWeather to true if at least one\n    // day fails the criteria\n  }\n\n  dangerousTidesToggler = (days, tidalData) => {\n    // receives an array of days and the data for these days\n    // toggles state.dangerousTides to true if at least one\n    // day fails the criteria\n  }\n  \n  dangerToggler = () => {\n    if(this.state.dangerousTides || this.state.dangerousWeather) {\n      this.setState({danger: true});\n    } else {\n      this.setState({danger: false});\n    }\n  }\n  \n  render() {\n    let quayStatus;\n    if(this.state.danger) {\n      quayStatus = \"in danger\";\n    } else {\n      quayStatus = \"safe\"\n    }\n\n    return(\n      <Aux>\n        <h1>\n          The quay wall is currently {quayStatus}.\n          \n        </h1>\n      </Aux>\n    );\n  }\n}\n\nexport default QuayStatus;"]},"metadata":{},"sourceType":"module"}